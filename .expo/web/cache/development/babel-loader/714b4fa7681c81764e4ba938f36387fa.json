{"ast":null,"code":"import Home from \"./src/screens/home\";\nimport About from \"./src/screens/about\";\nimport Register from \"./src/screens/signup\";\nimport Search from \"./src/screens/search\";\nimport SignOut from \"./src/screens/signout\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\nimport { Provider } from 'react-redux';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar TopTab = createMaterialTopTabNavigator();\nexport default function App() {\n  return _jsx(Provider, {\n    store: store,\n    children: _jsx(NavigationContainer, {\n      children: _jsxs(Tab.Navigator, {\n        screenOptions: function screenOptions(_ref) {\n          var route = _ref.route;\n          return {\n            tabBarIcon: function tabBarIcon(_ref2) {\n              var focused = _ref2.focused,\n                  color = _ref2.color,\n                  size = _ref2.size;\n              var iconName;\n\n              if (route.name === 'Home') {\n                iconName = focused ? 'ios-home' : 'ios-home-outline';\n              } else if (route.name === 'About') {\n                iconName = focused ? 'ios-book' : 'ios-book-outline';\n              } else if (route.name === 'Register') {\n                iconName = focused ? 'ios-person-add' : 'ios-person-add-outline';\n              } else if (route.name === 'Search') {\n                iconName = focused ? 'ios-search' : 'ios-search-outline';\n              } else if (route.name === 'SignOut') {\n                iconName = focused ? 'ios-search' : 'ios-search-outline';\n              }\n\n              return _jsx(Ionicons, {\n                name: iconName,\n                size: size,\n                color: color\n              });\n            }\n          };\n        },\n        tabBarOptions: {\n          activeTintColor: 'tomato',\n          inactiveTintColor: 'gray'\n        },\n        children: [_jsx(Tab.Screen, {\n          name: \"Home\",\n          component: Home\n        }), _jsx(Tab.Screen, {\n          name: \"About\",\n          component: About\n        }), _jsx(Tab.Screen, {\n          name: \"Register\",\n          component: Register\n        }), _jsx(Tab.Screen, {\n          name: \"Search\",\n          component: Search\n        }), _jsx(Tab.Screen, {\n          name: \"SignOut\",\n          component: SignOut\n        })]\n      })\n    })\n  });\n}","map":{"version":3,"names":["Home","About","Register","Search","SignOut","NavigationContainer","createBottomTabNavigator","MaterialCommunityIcons","Ionicons","createMaterialTopTabNavigator","Provider","Tab","TopTab","App","store","route","tabBarIcon","focused","color","size","iconName","name","activeTintColor","inactiveTintColor"],"sources":["C:/Users/cjchu/AwesomeProject/App.js"],"sourcesContent":["import Home from './src/screens/home';\nimport About from './src/screens/about';\nimport Register from './src/screens/signup';\nimport Search from './src/screens/search';\nimport SignOut from './src/screens/signout';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\nimport { Provider } from 'react-redux';\n\nconst Tab = createBottomTabNavigator();\nconst TopTab = createMaterialTopTabNavigator();\n\nexport default function App() {\n    return ( \n        <Provider store={store}>\n        <NavigationContainer>\n            <Tab.Navigator\n                    screenOptions={({ route }) => ({\n                    tabBarIcon: ({ focused, color, size }) => {\n                        let iconName;\n                        if (route.name === 'Home') {\n                        iconName = focused\n                            ? 'ios-home'\n                            : 'ios-home-outline';\n                        } else if (route.name === 'About') {\n                        iconName = focused ? 'ios-book' : 'ios-book-outline';\n\n                        } else if (route.name === 'Register') {\n                        iconName = focused ? 'ios-person-add' : 'ios-person-add-outline';\n                        \n\n                        } else if (route.name === 'Search') {\n                        iconName = focused ? 'ios-search' : 'ios-search-outline';\n                        \n\n                       // } else if (route.name === 'Search') {\n                       // iconName = focused ? 'ios-search' : 'ios-search-outline';\n                        } else if (route.name === 'SignOut') {\n                        iconName = focused ? 'ios-search' : 'ios-search-outline';\n                        }\n                        // You can return any component that you like here!\n                        return <Ionicons name={iconName} size={size} color={color} />;\n                    },\n                    })}\n                    tabBarOptions={{\n                    activeTintColor: 'tomato',\n                    inactiveTintColor: 'gray',\n                    }}\n                >\n            <Tab.Screen name=\"Home\" component={Home} />\n            <Tab.Screen name=\"About\" component={About} />\n            <Tab.Screen name=\"Register\" component={Register} />\n            <Tab.Screen name=\"Search\" component={Search} />\n            <Tab.Screen name=\"SignOut\" component={SignOut} />\n            </Tab.Navigator>\n            </NavigationContainer>\n            </Provider>\n);\n}\n\n"],"mappings":"AAAA,OAAOA,IAAP;AACA,OAAOC,KAAP;AACA,OAAOC,QAAP;AACA,OAAOC,MAAP;AACA,OAAOC,OAAP;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,OAAOC,sBAAP;AACA,OAAOC,QAAP;AACA,SAASC,6BAAT,QAA8C,qCAA9C;AACA,SAASC,QAAT,QAAyB,aAAzB;;;AAEA,IAAMC,GAAG,GAAGL,wBAAwB,EAApC;AACA,IAAMM,MAAM,GAAGH,6BAA6B,EAA5C;AAEA,eAAe,SAASI,GAAT,GAAe;EAC1B,OACI,KAAC,QAAD;IAAU,KAAK,EAAEC,KAAjB;IAAA,UACA,KAAC,mBAAD;MAAA,UACI,MAAC,GAAD,CAAK,SAAL;QACQ,aAAa,EAAE;UAAA,IAAGC,KAAH,QAAGA,KAAH;UAAA,OAAgB;YAC/BC,UAAU,EAAE,2BAA8B;cAAA,IAA3BC,OAA2B,SAA3BA,OAA2B;cAAA,IAAlBC,KAAkB,SAAlBA,KAAkB;cAAA,IAAXC,IAAW,SAAXA,IAAW;cACtC,IAAIC,QAAJ;;cACA,IAAIL,KAAK,CAACM,IAAN,KAAe,MAAnB,EAA2B;gBAC3BD,QAAQ,GAAGH,OAAO,GACZ,UADY,GAEZ,kBAFN;cAGC,CAJD,MAIO,IAAIF,KAAK,CAACM,IAAN,KAAe,OAAnB,EAA4B;gBACnCD,QAAQ,GAAGH,OAAO,GAAG,UAAH,GAAgB,kBAAlC;cAEC,CAHM,MAGA,IAAIF,KAAK,CAACM,IAAN,KAAe,UAAnB,EAA+B;gBACtCD,QAAQ,GAAGH,OAAO,GAAG,gBAAH,GAAsB,wBAAxC;cAGC,CAJM,MAIA,IAAIF,KAAK,CAACM,IAAN,KAAe,QAAnB,EAA6B;gBACpCD,QAAQ,GAAGH,OAAO,GAAG,YAAH,GAAkB,oBAApC;cAKC,CANM,MAMA,IAAIF,KAAK,CAACM,IAAN,KAAe,SAAnB,EAA8B;gBACrCD,QAAQ,GAAGH,OAAO,GAAG,YAAH,GAAkB,oBAApC;cACC;;cAED,OAAO,KAAC,QAAD;gBAAU,IAAI,EAAEG,QAAhB;gBAA0B,IAAI,EAAED,IAAhC;gBAAsC,KAAK,EAAED;cAA7C,EAAP;YACH;UAzB8B,CAAhB;QAAA,CADvB;QA4BQ,aAAa,EAAE;UACfI,eAAe,EAAE,QADF;UAEfC,iBAAiB,EAAE;QAFJ,CA5BvB;QAAA,WAiCA,KAAC,GAAD,CAAK,MAAL;UAAY,IAAI,EAAC,MAAjB;UAAwB,SAAS,EAAEvB;QAAnC,EAjCA,EAkCA,KAAC,GAAD,CAAK,MAAL;UAAY,IAAI,EAAC,OAAjB;UAAyB,SAAS,EAAEC;QAApC,EAlCA,EAmCA,KAAC,GAAD,CAAK,MAAL;UAAY,IAAI,EAAC,UAAjB;UAA4B,SAAS,EAAEC;QAAvC,EAnCA,EAoCA,KAAC,GAAD,CAAK,MAAL;UAAY,IAAI,EAAC,QAAjB;UAA0B,SAAS,EAAEC;QAArC,EApCA,EAqCA,KAAC,GAAD,CAAK,MAAL;UAAY,IAAI,EAAC,SAAjB;UAA2B,SAAS,EAAEC;QAAtC,EArCA;MAAA;IADJ;EADA,EADJ;AA6CH"},"metadata":{},"sourceType":"module"}