{"ast":null,"code":"import Home from \"./src/screens/home\";\nimport About from \"./src/screens/about\";\nimport SignUp from \"./src/screens/signup\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Tab.Navigator, {\n      screenOptions: function screenOptions(_ref) {\n        var route = _ref.route;\n        return {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var focused = _ref2.focused,\n                color = _ref2.color,\n                size = _ref2.size;\n            var iconName;\n\n            if (route.name === 'Home') {\n              iconName = focused ? 'ios-information-circle' : 'ios-information-circle-outline';\n            } else if (route.name === 'About') {\n              iconName = focused ? 'ios-list-box' : 'ios-list';\n            } else if (route.name === 'SignUp') {\n              iconName = focused ? 'ios-person' : 'person-outline';\n            }\n\n            return _jsx(Ionicons, {\n              name: iconName,\n              size: size,\n              color: color\n            });\n          }\n        };\n      },\n      tabBarOptions: {\n        activeTintColor: 'tomato',\n        inactiveTintColor: 'gray'\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"Home\",\n        component: Home\n      }), _jsx(Tab.Screen, {\n        name: \"About\",\n        component: About\n      })]\n    })\n  });\n}","map":{"version":3,"names":["Home","About","SignUp","NavigationContainer","createBottomTabNavigator","MaterialCommunityIcons","Ionicons","Tab","App","route","tabBarIcon","focused","color","size","iconName","name","activeTintColor","inactiveTintColor"],"sources":["C:/Users/cjchu/AwesomeProject/App.js"],"sourcesContent":["import Home from './src/screens/home';\nimport About from './src/screens/about';\nimport SignUp from './src/screens/signup';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\n\nconst Tab = createBottomTabNavigator();\n\n\n\n// export default function App() {\n//     return ( \n//         <NavigationContainer>\n//             <Tab.Navigator>\n//                 <Tab.Screen name=\"Home\" component={Home} />\n//                 <Tab.Screen name=\"About\" component={About} />\n//                 <Tab.Screen name=\"SignUp\" component={SignUp} />\n//         </Tab.Navigator>\n//         </NavigationContainer>\n//     );\n// }\n\n\n// export default function App() {\n//     return (\n//       <NavigationContainer>\n//         <Tab.Navigator\n//           initialRouteName={Home}\n//           screenOptions={({ route }) => ({\n//             \"tabBarActiveTintColor\": \"tomato\",\n//             \"tabBarInactiveTintColor\": \"gray\",\n//             \"tabBarLabelStyle\": {\n//             \"paddingBottom\": 10,\n//             \"fontSize\": 10\n//         },\n//         \"tabBarStyle\": [\n//           {\n//             \"display\": \"flex\"\n//           },\n//           null\n//         ],\n    \n//         tabBarIcon: ({ focused, color, size }) => {\n//         let iconName;\n//         let rn = route.name;\n\n//         if (rn === Home) {\n//         iconName = focused ? 'home' : 'home-outline';\n\n//         } else if (rn === About) {\n//         iconName = focused ? 'list' : 'list-outline';\n\n//         } else if (rn === SignUp) {\n//         iconName = focused ? 'settings' : 'settings-outline';\n//         }\n\n//         return <IonicIcons name={iconName} size={size} color={color} />;\n//     },\n//     })}>\n\n//     <Tab.Screen name=\"Home\" component={Home} />\n//     <Tab.Screen name=\"About\" component={About} />\n//     <Tab.Screen name=\"SignUp\" component={SignUp} />\n\n// </Tab.Navigator>\n// </NavigationContainer>\n// );\n// }\n  \n\n// export default function App() {\n//   return (\n//     <Tab.Navigator\n//       initialRouteName=\"Home\"\n//       screenOptions={{\n//         tabBarActiveTintColor: '#e91e63',\n//       }}\n//     >\n//       <Tab.Screen\n//         name=\"Home\"\n//         component={Home}\n//         options={{\n//           tabBarLabel: 'Home',\n//           tabBarIcon: ({ color, size }) => (\n//             <MaterialCommunityIcons name=\"home\" color={color} size={size} />\n//           ),\n//         }}\n//       />\n//       <Tab.Screen\n//         name=\"About\"\n//         component={About}\n//         options={{\n//           tabBarLabel: 'About',\n//           tabBarIcon: ({ color, size }) => (\n//             <MaterialCommunityIcons name=\"bell\" color={color} size={size} />\n//           ),\n//           tabBarBadge: 3,\n//         }}\n//       />\n//       <Tab.Screen\n//         name=\"SignUp\"\n//         component={SignUp}\n//         options={{\n//           tabBarLabel: 'SignUp',\n//           tabBarIcon: ({ color, size }) => (\n//             <MaterialCommunityIcons name=\"account\" color={color} size={size} />\n//           ),\n//         }}\n//       />\n//     </Tab.Navigator>\n//   );\n// }\n\nexport default function App() {\n    return ( \n        <NavigationContainer>\n            <Tab.Navigator\n                    screenOptions={({ route }) => ({\n                    tabBarIcon: ({ focused, color, size }) => {\n                        let iconName;\n                        if (route.name === 'Home') {\n                        iconName = focused\n                            ? 'ios-information-circle'\n                            : 'ios-information-circle-outline';\n                        } else if (route.name === 'About') {\n                        iconName = focused ? 'ios-list-box' : 'ios-list';\n                        } else if (route.name === 'SignUp') {\n                        iconName = focused ? 'ios-person' : 'person-outline';\n                        }\n\n                        // You can return any component that you like here!\n                        return <Ionicons name={iconName} size={size} color={color} />;\n                    },\n                    })}\n                    tabBarOptions={{\n                    activeTintColor: 'tomato',\n                    inactiveTintColor: 'gray',\n                    }}\n                >\n            <Tab.Screen name=\"Home\" component={Home} />\n            <Tab.Screen name=\"About\" component={About} />\n            </Tab.Navigator>\n            </NavigationContainer>\n);\n}\n\n"],"mappings":"AAAA,OAAOA,IAAP;AACA,OAAOC,KAAP;AACA,OAAOC,MAAP;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,OAAOC,sBAAP;AACA,OAAOC,QAAP;;;AAEA,IAAMC,GAAG,GAAGH,wBAAwB,EAApC;AA2GA,eAAe,SAASI,GAAT,GAAe;EAC1B,OACI,KAAC,mBAAD;IAAA,UACI,MAAC,GAAD,CAAK,SAAL;MACQ,aAAa,EAAE;QAAA,IAAGC,KAAH,QAAGA,KAAH;QAAA,OAAgB;UAC/BC,UAAU,EAAE,2BAA8B;YAAA,IAA3BC,OAA2B,SAA3BA,OAA2B;YAAA,IAAlBC,KAAkB,SAAlBA,KAAkB;YAAA,IAAXC,IAAW,SAAXA,IAAW;YACtC,IAAIC,QAAJ;;YACA,IAAIL,KAAK,CAACM,IAAN,KAAe,MAAnB,EAA2B;cAC3BD,QAAQ,GAAGH,OAAO,GACZ,wBADY,GAEZ,gCAFN;YAGC,CAJD,MAIO,IAAIF,KAAK,CAACM,IAAN,KAAe,OAAnB,EAA4B;cACnCD,QAAQ,GAAGH,OAAO,GAAG,cAAH,GAAoB,UAAtC;YACC,CAFM,MAEA,IAAIF,KAAK,CAACM,IAAN,KAAe,QAAnB,EAA6B;cACpCD,QAAQ,GAAGH,OAAO,GAAG,YAAH,GAAkB,gBAApC;YACC;;YAGD,OAAO,KAAC,QAAD;cAAU,IAAI,EAAEG,QAAhB;cAA0B,IAAI,EAAED,IAAhC;cAAsC,KAAK,EAAED;YAA7C,EAAP;UACH;QAf8B,CAAhB;MAAA,CADvB;MAkBQ,aAAa,EAAE;QACfI,eAAe,EAAE,QADF;QAEfC,iBAAiB,EAAE;MAFJ,CAlBvB;MAAA,WAuBA,KAAC,GAAD,CAAK,MAAL;QAAY,IAAI,EAAC,MAAjB;QAAwB,SAAS,EAAEjB;MAAnC,EAvBA,EAwBA,KAAC,GAAD,CAAK,MAAL;QAAY,IAAI,EAAC,OAAjB;QAAyB,SAAS,EAAEC;MAApC,EAxBA;IAAA;EADJ,EADJ;AA8BH"},"metadata":{},"sourceType":"module"}