{"ast":null,"code":"import Home from \"./src/screens/home\";\nimport About from \"./src/screens/about\";\nimport SignUp from \"./src/screens/signup\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Tab.Navigator, {\n      initialRouteName: Home,\n      screenOptions: function screenOptions(_ref) {\n        var route = _ref.route;\n        return {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var focused = _ref2.focused,\n                color = _ref2.color,\n                size = _ref2.size;\n            var iconName;\n            var rn = route.name;\n\n            if (rn === Home) {\n              iconName = focused ? 'home' : 'home-outline';\n            } else if (rn === About) {\n              iconName = focused ? 'list' : 'list-outline';\n            } else if (rn === SignUp) {\n              iconName = focused ? 'settings' : 'settings-outline';\n            }\n\n            return _jsx(Ionicons, {\n              name: iconName,\n              size: size,\n              color: color\n            });\n          }\n        };\n      },\n      tabBarOptions: {\n        activeTintColor: 'tomato',\n        inactiveTintColor: 'grey',\n        labelStyle: {\n          paddingBottom: 10,\n          fontSize: 10\n        },\n        style: {\n          padding: 10,\n          height: 70\n        }\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"Home\",\n        component: Home\n      }), _jsx(Tab.Screen, {\n        name: \"About\",\n        component: About\n      }), _jsx(Tab.Screen, {\n        name: \"SignUp\",\n        component: SignUp\n      })]\n    })\n  });\n}","map":{"version":3,"names":["Home","About","SignUp","NavigationContainer","createBottomTabNavigator","Ionicons","Tab","App","route","tabBarIcon","focused","color","size","iconName","rn","name","activeTintColor","inactiveTintColor","labelStyle","paddingBottom","fontSize","style","padding","height"],"sources":["C:/Users/cjchu/AwesomeProject/App.js"],"sourcesContent":["import Home from './src/screens/home';\nimport About from './src/screens/about';\nimport SignUp from './src/screens/signup';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\n\nconst Tab = createBottomTabNavigator();\n\n\n// export default function App() {\n//     return ( \n//         <NavigationContainer>\n//             <Tab.Navigator>\n//                 <Tab.Screen name=\"Home\" component={Home} />\n//                 <Tab.Screen name=\"About\" component={About} />\n//                 <Tab.Screen name=\"SignUp\" component={SignUp} />\n//         </Tab.Navigator>\n//         </NavigationContainer>\n//     );\n// }\n\n\nexport default function App() {\n    return (\n      <NavigationContainer>\n        <Tab.Navigator\n          initialRouteName={Home}\n          screenOptions={({ route }) => ({\n            tabBarIcon: ({ focused, color, size }) => {\n              let iconName;\n              let rn = route.name;\n  \n              if (rn === Home) {\n                iconName = focused ? 'home' : 'home-outline';\n  \n              } else if (rn === About) {\n                iconName = focused ? 'list' : 'list-outline';\n  \n              } else if (rn === SignUp) {\n                iconName = focused ? 'settings' : 'settings-outline';\n              }\n  \n              return <Ionicons name={iconName} size={size} color={color} />;\n            },\n          })}\n          tabBarOptions={{\n            activeTintColor: 'tomato',\n            inactiveTintColor: 'grey',\n            labelStyle: { paddingBottom: 10, fontSize: 10 },\n            style: { padding: 10, height: 70}\n          }}>\n  \n        <Tab.Screen name=\"Home\" component={Home} />\n                <Tab.Screen name=\"About\" component={About} />\n                <Tab.Screen name=\"SignUp\" component={SignUp} />\n  \n        </Tab.Navigator>\n      </NavigationContainer>\n    );\n  }\n  \n\n  \n\n"],"mappings":"AAAA,OAAOA,IAAP;AACA,OAAOC,KAAP;AACA,OAAOC,MAAP;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,OAAOC,QAAP;;;AAEA,IAAMC,GAAG,GAAGF,wBAAwB,EAApC;AAgBA,eAAe,SAASG,GAAT,GAAe;EAC1B,OACE,KAAC,mBAAD;IAAA,UACE,MAAC,GAAD,CAAK,SAAL;MACE,gBAAgB,EAAEP,IADpB;MAEE,aAAa,EAAE;QAAA,IAAGQ,KAAH,QAAGA,KAAH;QAAA,OAAgB;UAC7BC,UAAU,EAAE,2BAA8B;YAAA,IAA3BC,OAA2B,SAA3BA,OAA2B;YAAA,IAAlBC,KAAkB,SAAlBA,KAAkB;YAAA,IAAXC,IAAW,SAAXA,IAAW;YACxC,IAAIC,QAAJ;YACA,IAAIC,EAAE,GAAGN,KAAK,CAACO,IAAf;;YAEA,IAAID,EAAE,KAAKd,IAAX,EAAiB;cACfa,QAAQ,GAAGH,OAAO,GAAG,MAAH,GAAY,cAA9B;YAED,CAHD,MAGO,IAAII,EAAE,KAAKb,KAAX,EAAkB;cACvBY,QAAQ,GAAGH,OAAO,GAAG,MAAH,GAAY,cAA9B;YAED,CAHM,MAGA,IAAII,EAAE,KAAKZ,MAAX,EAAmB;cACxBW,QAAQ,GAAGH,OAAO,GAAG,UAAH,GAAgB,kBAAlC;YACD;;YAED,OAAO,KAAC,QAAD;cAAU,IAAI,EAAEG,QAAhB;cAA0B,IAAI,EAAED,IAAhC;cAAsC,KAAK,EAAED;YAA7C,EAAP;UACD;QAhB4B,CAAhB;MAAA,CAFjB;MAoBE,aAAa,EAAE;QACbK,eAAe,EAAE,QADJ;QAEbC,iBAAiB,EAAE,MAFN;QAGbC,UAAU,EAAE;UAAEC,aAAa,EAAE,EAAjB;UAAqBC,QAAQ,EAAE;QAA/B,CAHC;QAIbC,KAAK,EAAE;UAAEC,OAAO,EAAE,EAAX;UAAeC,MAAM,EAAE;QAAvB;MAJM,CApBjB;MAAA,WA2BA,KAAC,GAAD,CAAK,MAAL;QAAY,IAAI,EAAC,MAAjB;QAAwB,SAAS,EAAEvB;MAAnC,EA3BA,EA4BQ,KAAC,GAAD,CAAK,MAAL;QAAY,IAAI,EAAC,OAAjB;QAAyB,SAAS,EAAEC;MAApC,EA5BR,EA6BQ,KAAC,GAAD,CAAK,MAAL;QAAY,IAAI,EAAC,QAAjB;QAA0B,SAAS,EAAEC;MAArC,EA7BR;IAAA;EADF,EADF;AAoCD"},"metadata":{},"sourceType":"module"}