{"ast":null,"code":"import Home from \"./src/screens/home\";\nimport About from \"./src/screens/about\";\nimport SignUp from \"./src/screens/signup\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Tab.Navigator, {\n      initialRouteName: Home,\n      screenOptions: function screenOptions(_ref) {\n        var route = _ref.route;\n        return {\n          \"tabBarActiveTintColor\": \"tomato\",\n          \"tabBarInactiveTintColor\": \"gray\",\n          \"tabBarLabelStyle\": {\n            \"paddingBottom\": 10,\n            \"fontSize\": 10\n          },\n          \"tabBarStyle\": [{\n            \"display\": \"flex\"\n          }, null],\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var focused = _ref2.focused,\n                color = _ref2.color,\n                size = _ref2.size;\n            var iconName;\n            var rn = route.name;\n\n            if (rn === Home) {\n              iconName = focused ? 'home' : 'home-outline';\n            } else if (rn === About) {\n              iconName = focused ? 'list' : 'list-outline';\n            } else if (rn === SignUp) {\n              iconName = focused ? 'settings' : 'settings-outline';\n            }\n\n            return _jsx(Ionicons, {\n              name: iconName,\n              size: size,\n              color: color\n            });\n          }\n        };\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"Home\",\n        component: Home\n      }), _jsx(Tab.Screen, {\n        name: \"About\",\n        component: About\n      }), _jsx(Tab.Screen, {\n        name: \"SignUp\",\n        component: SignUp\n      })]\n    })\n  });\n}","map":{"version":3,"names":["Home","About","SignUp","NavigationContainer","createBottomTabNavigator","MaterialCommunityIcons","Ionicons","Tab","App","route","tabBarIcon","focused","color","size","iconName","rn","name"],"sources":["C:/Users/cjchu/AwesomeProject/App.js"],"sourcesContent":["import Home from './src/screens/home';\nimport About from './src/screens/about';\nimport SignUp from './src/screens/signup';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\n\nconst Tab = createBottomTabNavigator();\n\n\n\n// export default function App() {\n//     return ( \n//         <NavigationContainer>\n//             <Tab.Navigator>\n//                 <Tab.Screen name=\"Home\" component={Home} />\n//                 <Tab.Screen name=\"About\" component={About} />\n//                 <Tab.Screen name=\"SignUp\" component={SignUp} />\n//         </Tab.Navigator>\n//         </NavigationContainer>\n//     );\n// }\n\n\nexport default function App() {\n    return (\n      <NavigationContainer>\n        <Tab.Navigator\n          initialRouteName={Home}\n          screenOptions={({ route }) => ({\n            \"tabBarActiveTintColor\": \"tomato\",\n            \"tabBarInactiveTintColor\": \"gray\",\n            \"tabBarLabelStyle\": {\n            \"paddingBottom\": 10,\n            \"fontSize\": 10\n        },\n        \"tabBarStyle\": [\n          {\n            \"display\": \"flex\"\n          },\n          null\n        ],\n    \n        tabBarIcon: ({ focused, color, size }) => {\n        let iconName;\n        let rn = route.name;\n\n        if (rn === Home) {\n        iconName = focused ? 'home' : 'home-outline';\n\n        } else if (rn === About) {\n        iconName = focused ? 'list' : 'list-outline';\n\n        } else if (rn === SignUp) {\n        iconName = focused ? 'settings' : 'settings-outline';\n        }\n\n        return <Ionicons name={iconName} size={size} color={color} />;\n    },\n    })}>\n\n    <Tab.Screen name=\"Home\" component={Home} />\n    <Tab.Screen name=\"About\" component={About} />\n    <Tab.Screen name=\"SignUp\" component={SignUp} />\n\n</Tab.Navigator>\n</NavigationContainer>\n);\n}\n  \n\n// export default function App() {\n//   return (\n//     <Tab.Navigator\n//       initialRouteName=\"Home\"\n//       screenOptions={{\n//         tabBarActiveTintColor: '#e91e63',\n//       }}\n//     >\n//       <Tab.Screen\n//         name=\"Home\"\n//         component={Home}\n//         options={{\n//           tabBarLabel: 'Home',\n//           tabBarIcon: ({ color, size }) => (\n//             <MaterialCommunityIcons name=\"home\" color={color} size={size} />\n//           ),\n//         }}\n//       />\n//       <Tab.Screen\n//         name=\"About\"\n//         component={About}\n//         options={{\n//           tabBarLabel: 'About',\n//           tabBarIcon: ({ color, size }) => (\n//             <MaterialCommunityIcons name=\"bell\" color={color} size={size} />\n//           ),\n//           tabBarBadge: 3,\n//         }}\n//       />\n//       <Tab.Screen\n//         name=\"SignUp\"\n//         component={SignUp}\n//         options={{\n//           tabBarLabel: 'SignUp',\n//           tabBarIcon: ({ color, size }) => (\n//             <MaterialCommunityIcons name=\"account\" color={color} size={size} />\n//           ),\n//         }}\n//       />\n//     </Tab.Navigator>\n//   );\n// }\n  \n\n"],"mappings":"AAAA,OAAOA,IAAP;AACA,OAAOC,KAAP;AACA,OAAOC,MAAP;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,OAAOC,sBAAP;AACA,OAAOC,QAAP;;;AAEA,IAAMC,GAAG,GAAGH,wBAAwB,EAApC;AAiBA,eAAe,SAASI,GAAT,GAAe;EAC1B,OACE,KAAC,mBAAD;IAAA,UACE,MAAC,GAAD,CAAK,SAAL;MACE,gBAAgB,EAAER,IADpB;MAEE,aAAa,EAAE;QAAA,IAAGS,KAAH,QAAGA,KAAH;QAAA,OAAgB;UAC7B,yBAAyB,QADI;UAE7B,2BAA2B,MAFE;UAG7B,oBAAoB;YACpB,iBAAiB,EADG;YAEpB,YAAY;UAFQ,CAHS;UAOjC,eAAe,CACb;YACE,WAAW;UADb,CADa,EAIb,IAJa,CAPkB;UAcjCC,UAAU,EAAE,2BAA8B;YAAA,IAA3BC,OAA2B,SAA3BA,OAA2B;YAAA,IAAlBC,KAAkB,SAAlBA,KAAkB;YAAA,IAAXC,IAAW,SAAXA,IAAW;YAC1C,IAAIC,QAAJ;YACA,IAAIC,EAAE,GAAGN,KAAK,CAACO,IAAf;;YAEA,IAAID,EAAE,KAAKf,IAAX,EAAiB;cACjBc,QAAQ,GAAGH,OAAO,GAAG,MAAH,GAAY,cAA9B;YAEC,CAHD,MAGO,IAAII,EAAE,KAAKd,KAAX,EAAkB;cACzBa,QAAQ,GAAGH,OAAO,GAAG,MAAH,GAAY,cAA9B;YAEC,CAHM,MAGA,IAAII,EAAE,KAAKb,MAAX,EAAmB;cAC1BY,QAAQ,GAAGH,OAAO,GAAG,UAAH,GAAgB,kBAAlC;YACC;;YAED,OAAO,KAAC,QAAD;cAAU,IAAI,EAAEG,QAAhB;cAA0B,IAAI,EAAED,IAAhC;cAAsC,KAAK,EAAED;YAA7C,EAAP;UACH;QA7BoC,CAAhB;MAAA,CAFjB;MAAA,WAkCJ,KAAC,GAAD,CAAK,MAAL;QAAY,IAAI,EAAC,MAAjB;QAAwB,SAAS,EAAEZ;MAAnC,EAlCI,EAmCJ,KAAC,GAAD,CAAK,MAAL;QAAY,IAAI,EAAC,OAAjB;QAAyB,SAAS,EAAEC;MAApC,EAnCI,EAoCJ,KAAC,GAAD,CAAK,MAAL;QAAY,IAAI,EAAC,QAAjB;QAA0B,SAAS,EAAEC;MAArC,EApCI;IAAA;EADF,EADF;AA2CH"},"metadata":{},"sourceType":"module"}