{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React, { useState } from 'react';\nimport _ from 'lodash';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar SignOut = function SignOut() {\n  var _useState = useState([{\n    type: \"Lion\"\n  }, {\n    type: \"Rabbit\"\n  }, {\n    type: \"Wolf\"\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      animals = _useState2[0],\n      setAnimals = _useState2[1];\n\n  var handThis = function handThis() {\n    var element = _.sample(animals);\n\n    console.log(element, \"element\");\n    return element;\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      children: animals.map(function (animal) {\n        return _jsx(Text, {\n          children: animal.type\n        });\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: function onPress() {\n        return setAnimals([].concat(_toConsumableArray(animals), [{\n          type: \"Sparrow\"\n        }]));\n      },\n      children: _jsx(Text, {\n        children: \"animalsAdd\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: function onPress() {\n        return setAnimals([handThis()]);\n      },\n      children: _jsx(Text, {\n        children: \"random\"\n      })\n    }), _jsx(Text, {\n      children: \"SIGNOUT!\"\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'blue',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    color: 'green',\n    fontWeight: 'bold',\n    textDecorationLine: 'underline',\n    fontSize: 20\n  },\n  button: {\n    alignItems: \"center\",\n    backgroundColor: \"#DDDDDD\",\n    padding: 10\n  }\n});\nexport default SignOut;","map":{"version":3,"names":["StatusBar","React","useState","_","SignOut","type","animals","setAnimals","handThis","element","sample","console","log","styles","container","map","animal","button","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","title","color","fontWeight","textDecorationLine","fontSize","padding"],"sources":["C:/Users/cjchu/AwesomeProject/src/screens/signout.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\r\nimport React, { useState} from 'react';\r\nimport _ from 'lodash';\r\n\r\n\r\nconst SignOut = () => {\r\n  const [animals, setAnimals] = useState([\r\n    { type: \"Lion\" },\r\n    { type: \"Rabbit\" },\r\n    { type: \"Wolf\" }\r\n  ]);\r\n  \r\n  const handThis = () =>{\r\n    const element = _.sample(animals);\r\n    console.log(element, \"element\")\r\n    return element\r\n  }\r\n\r\n  return (\r\n \r\n    <View style={styles.container}>\r\n      <View>\r\n      {animals.map((animal) => (\r\n        <Text>{animal.type}</Text>\r\n      ))}\r\n      </View>\r\n      \r\n\r\n      <TouchableOpacity style={styles.button} onPress={() => setAnimals([...animals, { type: \"Sparrow\" }])}>\r\n          <Text>animalsAdd</Text>\r\n      </TouchableOpacity>\r\n      \r\n        <TouchableOpacity style={styles.button} onPress={() => setAnimals([handThis()])}>\r\n          <Text>random</Text>\r\n      </TouchableOpacity>\r\n\r\n      <Text>SIGNOUT!</Text>\r\n      <StatusBar style=\"auto\" />\r\n    </View>\r\n)}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: 'blue',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    title: {\r\n      color: 'green',\r\n      fontWeight: 'bold',\r\n      textDecorationLine: 'underline',\r\n      fontSize: 20\r\n    },\r\n    button: {\r\n        alignItems: \"center\",\r\n        backgroundColor: \"#DDDDDD\",\r\n        padding: 10\r\n      },\r\n  });\r\n  \r\n\r\nexport default SignOut;"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,iBAA1B;;;;;AAEA,OAAOC,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AACA,OAAOC,CAAP,MAAc,QAAd;;;;AAGA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;EACpB,gBAA8BF,QAAQ,CAAC,CACrC;IAAEG,IAAI,EAAE;EAAR,CADqC,EAErC;IAAEA,IAAI,EAAE;EAAR,CAFqC,EAGrC;IAAEA,IAAI,EAAE;EAAR,CAHqC,CAAD,CAAtC;EAAA;EAAA,IAAOC,OAAP;EAAA,IAAgBC,UAAhB;;EAMA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAK;IACpB,IAAMC,OAAO,GAAGN,CAAC,CAACO,MAAF,CAASJ,OAAT,CAAhB;;IACAK,OAAO,CAACC,GAAR,CAAYH,OAAZ,EAAqB,SAArB;IACA,OAAOA,OAAP;EACD,CAJD;;EAMA,OAEE,MAAC,IAAD;IAAM,KAAK,EAAEI,MAAM,CAACC,SAApB;IAAA,WACE,KAAC,IAAD;MAAA,UACCR,OAAO,CAACS,GAAR,CAAY,UAACC,MAAD;QAAA,OACX,KAAC,IAAD;UAAA,UAAOA,MAAM,CAACX;QAAd,EADW;MAAA,CAAZ;IADD,EADF,EAQE,KAAC,gBAAD;MAAkB,KAAK,EAAEQ,MAAM,CAACI,MAAhC;MAAwC,OAAO,EAAE;QAAA,OAAMV,UAAU,8BAAKD,OAAL,IAAc;UAAED,IAAI,EAAE;QAAR,CAAd,GAAhB;MAAA,CAAjD;MAAA,UACI,KAAC,IAAD;QAAA;MAAA;IADJ,EARF,EAYI,KAAC,gBAAD;MAAkB,KAAK,EAAEQ,MAAM,CAACI,MAAhC;MAAwC,OAAO,EAAE;QAAA,OAAMV,UAAU,CAAC,CAACC,QAAQ,EAAT,CAAD,CAAhB;MAAA,CAAjD;MAAA,UACE,KAAC,IAAD;QAAA;MAAA;IADF,EAZJ,EAgBE,KAAC,IAAD;MAAA;IAAA,EAhBF,EAiBE,KAAC,SAAD;MAAW,KAAK,EAAC;IAAjB,EAjBF;EAAA,EAFF;AAqBA,CAlCF;;AAqCA,IAAMK,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;EAC7BL,SAAS,EAAE;IACTM,IAAI,EAAE,CADG;IAETC,eAAe,EAAE,MAFR;IAGTC,UAAU,EAAE,QAHH;IAITC,cAAc,EAAE;EAJP,CADkB;EAO7BC,KAAK,EAAE;IACLC,KAAK,EAAE,OADF;IAELC,UAAU,EAAE,MAFP;IAGLC,kBAAkB,EAAE,WAHf;IAILC,QAAQ,EAAE;EAJL,CAPsB;EAa7BX,MAAM,EAAE;IACJK,UAAU,EAAE,QADR;IAEJD,eAAe,EAAE,SAFb;IAGJQ,OAAO,EAAE;EAHL;AAbqB,CAAlB,CAAf;AAqBA,eAAezB,OAAf"},"metadata":{},"sourceType":"module"}