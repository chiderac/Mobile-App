{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar stateSetter = function stateSetter(state, key, payload) {\n  if (key.includes('/')) {\n    return state;\n  }\n\n  if (key === 'xResetState') {\n    return {};\n  }\n\n  var keySplitter = key.split('.');\n  var depth = keySplitter.length;\n\n  if (depth >= 4) {\n    console.warn(\"ReactNativeRedux.\" + key + \" is deep for \" + depth + \" levels which is deeper than what we currently support.\\nPleaase Submit a feature request showing your use case to support this depth\");\n    return state;\n  }\n\n  var logSuccess = function logSuccess() {\n    return console.log(\"ReactNativeRedux.\" + key, payload);\n  };\n\n  switch (depth) {\n    case 1:\n      logSuccess();\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, key, payload));\n\n    case 2:\n      logSuccess();\n\n      if (keySplitter[0] in state) {\n        logSuccess();\n        return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, keySplitter[0], _objectSpread(_objectSpread({}, state[keySplitter[0]]), {}, _defineProperty({}, keySplitter[1], payload))));\n      }\n\n    case 3:\n      if (keySplitter[0] in state && keySplitter[1] in state[keySplitter[0]]) {\n        logSuccess();\n        return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, keySplitter[0], _objectSpread(_objectSpread({}, state[keySplitter[0]]), {}, _defineProperty({}, keySplitter[1], _objectSpread(_objectSpread({}, state[keySplitter[0]][keySplitter[1]]), {}, _defineProperty({}, keySplitter[2], payload))))));\n      }\n\n    default:\n      console.warn(\"ReactNativeRedux Failed to change deep state: \" + key + \"./nMake Sure that its parent values are initialized before changing its children values.\");\n      return state;\n  }\n};\n\nexport { stateSetter };","map":{"version":3,"names":["stateSetter","state","key","payload","includes","keySplitter","split","depth","length","console","warn","logSuccess","log"],"sources":["C:/Users/cjchu/AwesomeProject/node_modules/react-native-redux/src/depth/setter.ts"],"sourcesContent":["const stateSetter = (state: object, key: string, payload: object) => {\n\n    if (key.includes('/')) { return state; }\n    if (key === 'xResetState') { return {}; } \n\n    const keySplitter = key.split('.');\n    const depth = keySplitter.length;\n\n    if (depth >= 4) {\n        console.warn(`ReactNativeRedux.${key} is deep for ${depth} levels which is deeper than what we currently support.\\nPleaase Submit a feature request showing your use case to support this depth`);\n        return state;\n    }\n\n    const logSuccess = () => console.log(`ReactNativeRedux.${key}`, payload);\n\n    switch (depth) {\n        case 1:\n            logSuccess()\n            return { ...state, [key]: payload }\n\n        case 2:\n            logSuccess()\n            if ((keySplitter[0] in state)) {\n                logSuccess()\n                return {\n                    ...state,\n                    [keySplitter[0]]: {\n                        ...state[keySplitter[0]],\n                        [keySplitter[1]]: payload,\n                    },\n                };\n            }\n\n        case 3:\n            if (\n                (keySplitter[0] in state) &&\n                (keySplitter[1] in state[keySplitter[0]])\n            ) {\n                logSuccess()\n                return {\n                    ...state,\n                    [keySplitter[0]]: {\n                        ...state[keySplitter[0]],\n                        [keySplitter[1]]: {\n                            ...state[keySplitter[0]][keySplitter[1]],\n                            [keySplitter[2]]: payload,\n                        },\n                    },\n                };\n            }\n\n        default:\n            console.warn(`ReactNativeRedux Failed to change deep state: ${key}./nMake Sure that its parent values are initialized before changing its children values.`);\n            return state;\n    }\n\n};\nexport { stateSetter };\n"],"mappings":";;;;;;AAAA,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAgBC,GAAhB,EAA6BC,OAA7B,EAAiD;EAEjE,IAAID,GAAG,CAACE,QAAJ,CAAa,GAAb,CAAJ,EAAuB;IAAE,OAAOH,KAAP;EAAe;;EACxC,IAAIC,GAAG,KAAK,aAAZ,EAA2B;IAAE,OAAO,EAAP;EAAY;;EAEzC,IAAMG,WAAW,GAAGH,GAAG,CAACI,KAAJ,CAAU,GAAV,CAApB;EACA,IAAMC,KAAK,GAAGF,WAAW,CAACG,MAA1B;;EAEA,IAAID,KAAK,IAAI,CAAb,EAAgB;IACZE,OAAO,CAACC,IAAR,uBAAiCR,GAAjC,qBAAoDK,KAApD;IACA,OAAON,KAAP;EACH;;EAED,IAAMU,UAAU,GAAG,SAAbA,UAAa;IAAA,OAAMF,OAAO,CAACG,GAAR,uBAAgCV,GAAhC,EAAuCC,OAAvC,CAAN;EAAA,CAAnB;;EAEA,QAAQI,KAAR;IACI,KAAK,CAAL;MACII,UAAU;MACV,uCAAYV,KAAZ,2BAAoBC,GAApB,EAA0BC,OAA1B;;IAEJ,KAAK,CAAL;MACIQ,UAAU;;MACV,IAAKN,WAAW,CAAC,CAAD,CAAX,IAAkBJ,KAAvB,EAA+B;QAC3BU,UAAU;QACV,uCACOV,KADP,2BAEKI,WAAW,CAAC,CAAD,CAFhB,kCAGWJ,KAAK,CAACI,WAAW,CAAC,CAAD,CAAZ,CAHhB,2BAISA,WAAW,CAAC,CAAD,CAJpB,EAI0BF,OAJ1B;MAOH;;IAEL,KAAK,CAAL;MACI,IACKE,WAAW,CAAC,CAAD,CAAX,IAAkBJ,KAAnB,IACCI,WAAW,CAAC,CAAD,CAAX,IAAkBJ,KAAK,CAACI,WAAW,CAAC,CAAD,CAAZ,CAF5B,EAGE;QACEM,UAAU;QACV,uCACOV,KADP,2BAEKI,WAAW,CAAC,CAAD,CAFhB,kCAGWJ,KAAK,CAACI,WAAW,CAAC,CAAD,CAAZ,CAHhB,2BAISA,WAAW,CAAC,CAAD,CAJpB,kCAKeJ,KAAK,CAACI,WAAW,CAAC,CAAD,CAAZ,CAAL,CAAsBA,WAAW,CAAC,CAAD,CAAjC,CALf,2BAMaA,WAAW,CAAC,CAAD,CANxB,EAM8BF,OAN9B;MAUH;;IAEL;MACIM,OAAO,CAACC,IAAR,oDAA8DR,GAA9D;MACA,OAAOD,KAAP;EAtCR;AAyCH,CAxDD;;AAyDA,SAASD,WAAT"},"metadata":{},"sourceType":"module"}