{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport { Provider as ProviderX } from 'react-redux';\nimport { RootStore, AppPersistor } from \"./config\";\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { xSetState, getStateForKey } from \"./methods\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar stateInitalizer = function stateInitalizer(initialState) {\n  var didInit = getStateForKey('didInit');\n\n  if (!didInit) {\n    xSetState(_objectSpread(_objectSpread({}, initialState), {}, {\n      didInit: true\n    }));\n  }\n};\n\nexport var Provider = function Provider(_ref) {\n  var _ref$initialState = _ref.initialState,\n      initialState = _ref$initialState === void 0 ? {} : _ref$initialState,\n      loading = _ref.loading,\n      children = _ref.children;\n  stateInitalizer(initialState);\n  return _jsx(ProviderX, {\n    store: RootStore,\n    children: _jsx(PersistGate, {\n      persistor: AppPersistor,\n      loading: loading,\n      children: children\n    })\n  });\n};","map":{"version":3,"names":["React","Provider","ProviderX","RootStore","AppPersistor","PersistGate","xSetState","getStateForKey","stateInitalizer","initialState","didInit","loading","children"],"sources":["C:/Users/cjchu/AwesomeProject/node_modules/react-native-redux/src/provider.tsx"],"sourcesContent":["import React from 'react';\nimport { Provider as ProviderX } from 'react-redux';\nimport { RootStore, AppPersistor } from './config';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { xSetState, getStateForKey } from './methods';\n\nconst stateInitalizer = (initialState: object) => {\n    const didInit = getStateForKey('didInit');\n    if (!didInit) { xSetState({ ...initialState, didInit: true }); }\n};\n\n/**\n * React Native Redux Provider\n * @example\n * const myInitialState = {\n *    // initial state\n * }\n * <Provider\n *  initialState={myInitialState}\n *  loading={\n *  // your loading UI *\n *  }\n *  >\n *   <App />\n * </Provider>\n * @param {object} initialState\n*/\nexport const Provider = ({\n    initialState = {},\n    loading,\n    children,\n}) => {\n    stateInitalizer(initialState);\n    return (\n        <ProviderX store={RootStore}>\n            <PersistGate\n                persistor={AppPersistor}\n                loading={loading}\n                children={children}\n            />\n        </ProviderX>\n    );\n};\n"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAQ,IAAIC,SAArB,QAAsC,aAAtC;AACA,SAASC,SAAT,EAAoBC,YAApB;AACA,SAASC,WAAT,QAA4B,iCAA5B;AACA,SAASC,SAAT,EAAoBC,cAApB;;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,YAAD,EAA0B;EAC9C,IAAMC,OAAO,GAAGH,cAAc,CAAC,SAAD,CAA9B;;EACA,IAAI,CAACG,OAAL,EAAc;IAAEJ,SAAS,iCAAMG,YAAN;MAAoBC,OAAO,EAAE;IAA7B,GAAT;EAAgD;AACnE,CAHD;;AAqBA,OAAO,IAAMT,QAAQ,GAAG,SAAXA,QAAW,OAIlB;EAAA,6BAHFQ,YAGE;EAAA,IAHFA,YAGE,kCAHa,EAGb;EAAA,IAFFE,OAEE,QAFFA,OAEE;EAAA,IADFC,QACE,QADFA,QACE;EACFJ,eAAe,CAACC,YAAD,CAAf;EACA,OACI,KAAC,SAAD;IAAW,KAAK,EAAEN,SAAlB;IAAA,UACI,KAAC,WAAD;MACI,SAAS,EAAEC,YADf;MAEI,OAAO,EAAEO,OAFb;MAGI,QAAQ,EAAEC;IAHd;EADJ,EADJ;AASH,CAfM"},"metadata":{},"sourceType":"module"}