{"ast":null,"code":"import Home from \"./src/screens/home\";\nimport About from \"./src/screens/about\";\nimport SignUp from \"./src/screens/signup\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport IonicIcons from \"@expo/vector-icons/Ionicons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\n\n_jsxs(Tab.Navigator, {\n  screenOptions: function screenOptions(_ref) {\n    var route = _ref.route;\n    return {\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var focused = _ref2.focused,\n            color = _ref2.color,\n            size = _ref2.size;\n        var iconName;\n\n        if (route.name === 'Home') {\n          iconName = focused ? 'ios-information-circle' : 'ios-information-circle-outline';\n        } else if (route.name === 'Settings') {\n          iconName = focused ? 'ios-list-box' : 'ios-list';\n        }\n\n        return _jsx(MaterialCommunityIcons, {\n          name: iconName,\n          size: size,\n          color: color\n        });\n      }\n    };\n  },\n  tabBarOptions: {\n    activeTintColor: 'tomato',\n    inactiveTintColor: 'gray'\n  },\n  children: [_jsx(Tab.Screen, {\n    name: \"Home\",\n    component: HomeScreen\n  }), _jsx(Tab.Screen, {\n    name: \"Settings\",\n    component: SettingsScreen\n  })]\n});","map":{"version":3,"names":["Home","About","SignUp","NavigationContainer","createBottomTabNavigator","IonicIcons","Tab","route","tabBarIcon","focused","color","size","iconName","name","activeTintColor","inactiveTintColor","HomeScreen","SettingsScreen"],"sources":["C:/Users/cjchu/AwesomeProject/App.js"],"sourcesContent":["import Home from './src/screens/home';\nimport About from './src/screens/about';\nimport SignUp from './src/screens/signup';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\n//import MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\nimport IonicIcons from 'react-native-vector-icons/Ionicons';\n\nconst Tab = createBottomTabNavigator();\n\n\n\n// export default function App() {\n//     return ( \n//         <NavigationContainer>\n//             <Tab.Navigator>\n//                 <Tab.Screen name=\"Home\" component={Home} />\n//                 <Tab.Screen name=\"About\" component={About} />\n//                 <Tab.Screen name=\"SignUp\" component={SignUp} />\n//         </Tab.Navigator>\n//         </NavigationContainer>\n//     );\n// }\n\n\n// export default function App() {\n//     return (\n//       <NavigationContainer>\n//         <Tab.Navigator\n//           initialRouteName={Home}\n//           screenOptions={({ route }) => ({\n//             \"tabBarActiveTintColor\": \"tomato\",\n//             \"tabBarInactiveTintColor\": \"gray\",\n//             \"tabBarLabelStyle\": {\n//             \"paddingBottom\": 10,\n//             \"fontSize\": 10\n//         },\n//         \"tabBarStyle\": [\n//           {\n//             \"display\": \"flex\"\n//           },\n//           null\n//         ],\n    \n//         tabBarIcon: ({ focused, color, size }) => {\n//         let iconName;\n//         let rn = route.name;\n\n//         if (rn === Home) {\n//         iconName = focused ? 'home' : 'home-outline';\n\n//         } else if (rn === About) {\n//         iconName = focused ? 'list' : 'list-outline';\n\n//         } else if (rn === SignUp) {\n//         iconName = focused ? 'settings' : 'settings-outline';\n//         }\n\n//         return <IonicIcons name={iconName} size={size} color={color} />;\n//     },\n//     })}>\n\n//     <Tab.Screen name=\"Home\" component={Home} />\n//     <Tab.Screen name=\"About\" component={About} />\n//     <Tab.Screen name=\"SignUp\" component={SignUp} />\n\n// </Tab.Navigator>\n// </NavigationContainer>\n// );\n// }\n  \n\n// export default function App() {\n//   return (\n//     <Tab.Navigator\n//       initialRouteName=\"Home\"\n//       screenOptions={{\n//         tabBarActiveTintColor: '#e91e63',\n//       }}\n//     >\n//       <Tab.Screen\n//         name=\"Home\"\n//         component={Home}\n//         options={{\n//           tabBarLabel: 'Home',\n//           tabBarIcon: ({ color, size }) => (\n//             <MaterialCommunityIcons name=\"home\" color={color} size={size} />\n//           ),\n//         }}\n//       />\n//       <Tab.Screen\n//         name=\"About\"\n//         component={About}\n//         options={{\n//           tabBarLabel: 'About',\n//           tabBarIcon: ({ color, size }) => (\n//             <MaterialCommunityIcons name=\"bell\" color={color} size={size} />\n//           ),\n//           tabBarBadge: 3,\n//         }}\n//       />\n//       <Tab.Screen\n//         name=\"SignUp\"\n//         component={SignUp}\n//         options={{\n//           tabBarLabel: 'SignUp',\n//           tabBarIcon: ({ color, size }) => (\n//             <MaterialCommunityIcons name=\"account\" color={color} size={size} />\n//           ),\n//         }}\n//       />\n//     </Tab.Navigator>\n//   );\n// }\n  \n<Tab.Navigator\n        screenOptions={({ route }) => ({\n          tabBarIcon: ({ focused, color, size }) => {\n            let iconName;\n\n            if (route.name === 'Home') {\n              iconName = focused\n                ? 'ios-information-circle'\n                : 'ios-information-circle-outline';\n            } else if (route.name === 'Settings') {\n              iconName = focused ? 'ios-list-box' : 'ios-list';\n            }\n\n            // You can return any component that you like here!\n            return <MaterialCommunityIcons name={iconName} size={size} color={color} />;\n          },\n        })}\n        tabBarOptions={{\n          activeTintColor: 'tomato',\n          inactiveTintColor: 'gray',\n        }}\n      >\n  <Tab.Screen name=\"Home\" component={HomeScreen} />\n  <Tab.Screen name=\"Settings\" component={SettingsScreen} />\n</Tab.Navigator>\n"],"mappings":"AAAA,OAAOA,IAAP;AACA,OAAOC,KAAP;AACA,OAAOC,MAAP;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AAEA,OAAOC,UAAP;;;AAEA,IAAMC,GAAG,GAAGF,wBAAwB,EAApC;;AA2GA,MAAC,GAAD,CAAK,SAAL;EACQ,aAAa,EAAE;IAAA,IAAGG,KAAH,QAAGA,KAAH;IAAA,OAAgB;MAC7BC,UAAU,EAAE,2BAA8B;QAAA,IAA3BC,OAA2B,SAA3BA,OAA2B;QAAA,IAAlBC,KAAkB,SAAlBA,KAAkB;QAAA,IAAXC,IAAW,SAAXA,IAAW;QACxC,IAAIC,QAAJ;;QAEA,IAAIL,KAAK,CAACM,IAAN,KAAe,MAAnB,EAA2B;UACzBD,QAAQ,GAAGH,OAAO,GACd,wBADc,GAEd,gCAFJ;QAGD,CAJD,MAIO,IAAIF,KAAK,CAACM,IAAN,KAAe,UAAnB,EAA+B;UACpCD,QAAQ,GAAGH,OAAO,GAAG,cAAH,GAAoB,UAAtC;QACD;;QAGD,OAAO,KAAC,sBAAD;UAAwB,IAAI,EAAEG,QAA9B;UAAwC,IAAI,EAAED,IAA9C;UAAoD,KAAK,EAAED;QAA3D,EAAP;MACD;IAd4B,CAAhB;EAAA,CADvB;EAiBQ,aAAa,EAAE;IACbI,eAAe,EAAE,QADJ;IAEbC,iBAAiB,EAAE;EAFN,CAjBvB;EAAA,WAsBE,KAAC,GAAD,CAAK,MAAL;IAAY,IAAI,EAAC,MAAjB;IAAwB,SAAS,EAAEC;EAAnC,EAtBF,EAuBE,KAAC,GAAD,CAAK,MAAL;IAAY,IAAI,EAAC,UAAjB;IAA4B,SAAS,EAAEC;EAAvC,EAvBF;AAAA"},"metadata":{},"sourceType":"module"}