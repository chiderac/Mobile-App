{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { FC, ReactElement, useState, useEffect } from \"react\";\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Parse from \"parse/react-native\";\nimport AppButton from \"../components/MyButton\";\nimport NewButton from \"../components/button.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Register() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      age = _useState4[0],\n      setAge = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      email = _useState6[0],\n      setEmail = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      username = _useState8[0],\n      setUsername = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      password = _useState10[0],\n      setPassword = _useState10[1];\n\n  useEffect(function () {\n    getData();\n  }, []);\n\n  var getData = function getData() {\n    try {\n      AsyncStorage.getItem(\"UserData\").then(function (value) {\n        if (value != null) {\n          navigation.navigate('login');\n        }\n      });\n    } catch (error) {\n      console.warn(error);\n    }\n  };\n\n  var setData = function () {\n    var _ref = _asyncToGenerator(function* (data) {\n      if (username.length == 0 || password.length == 0) {\n        Alert.alert(\"Warning!\", \"Please write your data\");\n      } else {\n        try {\n          var user = {\n            Username: username,\n            Password: password\n          };\n          yield AsyncStorage.setItem(\"UserData\", JSON.stringify(user));\n          Alert.alert(\"Account Created Successfully\", []);\n        } catch (error) {\n          console.warn(error);\n        }\n      }\n    });\n\n    return function setData(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return _jsx(ImageBackground, {\n    source: {\n      uri: 'https://img.freepik.com/free-vector/halftone-background-with-circles_23-2148907689.jpg?w=900&t=st=1663801401~exp=1663802001~hmac=ab514b0b1a1fdde6106cdc6443692a75d6fb569104a701587eedd499e5237bd7'\n    },\n    style: styles.backgroundImage,\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \" Register Today! \"\n      }), _jsx(Text, {}), _jsx(Text, {\n        style: styles.subheader,\n        children: \"Enter Name:\"\n      }), _jsx(TextInput, {\n        placeholder: \"e.g. John Doe\",\n        style: styles.input,\n        onChangeText: function onChangeText(value) {\n          return setName(value);\n        }\n      }), _jsx(Text, {\n        style: styles.subheader,\n        children: \"Enter Age:\"\n      }), _jsx(TextInput, {\n        keyboardType: \"numeric\",\n        placeholder: \"e.g. 25\",\n        style: styles.input,\n        onChangeText: function onChangeText(value) {\n          return setAge(value);\n        }\n      }), _jsx(Text, {\n        style: styles.subheader,\n        children: \"Enter Email:\"\n      }), _jsx(TextInput, {\n        keyboardType: \"email-address\",\n        placeholder: \"e.g. johndoe@yahoo.co.uk\",\n        style: styles.input,\n        onChangeText: function onChangeText(value) {\n          return setEmail(value);\n        }\n      }), _jsx(Text, {\n        style: styles.subheader,\n        children: \"Enter Username:\"\n      }), _jsx(TextInput, {\n        keyboardType: \"username\",\n        placeholder: \"e.g. chiderac\",\n        style: styles.input,\n        value: username,\n        onChangeText: function onChangeText(value) {\n          return setUsername(value);\n        }\n      }), _jsx(Text, {\n        style: styles.subheader,\n        children: \"Enter Password:\"\n      }), _jsx(TextInput, {\n        placeholder: \"e.g. xxxxxx\",\n        style: styles.input,\n        value: password,\n        onChangeText: function onChangeText(value) {\n          return setPassword(value);\n        }\n      }), _jsx(Button, {\n        title: \"Sign Up\",\n        onPress: {\n          setData: setData\n        }\n      }), _jsx(StatusBar, {\n        style: \"auto\"\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    color: 'white',\n    fontWeight: 'bold',\n    fontSize: 30\n  },\n  header: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: 20\n  },\n  subheader: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: 16\n  },\n  text: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: 14\n  },\n  backgroundImage: {\n    flex: 1,\n    resizeMode: 'cover'\n  },\n  input: {\n    borderWidth: 5,\n    backgroundColor: 'white',\n    borderColor: 'white',\n    padding: 8,\n    margin: 10,\n    width: 200\n  }\n});","map":{"version":3,"names":["React","FC","ReactElement","useState","useEffect","StatusBar","AsyncStorage","Parse","AppButton","NewButton","Register","name","setName","age","setAge","email","setEmail","username","setUsername","password","setPassword","getData","getItem","then","value","navigation","navigate","error","console","warn","setData","data","length","Alert","alert","user","Username","Password","setItem","JSON","stringify","uri","styles","backgroundImage","container","title","subheader","input","StyleSheet","create","flex","alignItems","justifyContent","color","fontWeight","fontSize","header","text","resizeMode","borderWidth","backgroundColor","borderColor","padding","margin","width"],"sources":["C:/Users/cjchu/AwesomeProject/src/screens/signup.js"],"sourcesContent":["//<AppButton />   \r\n//<NewButton buttonText=\"Enter\" ></NewButton> \r\n// import React, { useState } from 'react';\r\nimport React, { FC, ReactElement, useState, useEffect } from \"react\";\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { StyleSheet, Text, View, Button, ImageBackground, TextInput, Alert } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport Parse from \"parse/react-native\";\r\nimport AppButton from '../components/MyButton';\r\nimport NewButton from '../components/button.js';\r\n\r\nexport default function Register() {\r\n    const [name, setName] = useState('');\r\n    const [age, setAge] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    useEffect(() => {\r\n        getData();\r\n    }, [])\r\n\r\n    const getData = () => {\r\n        try{\r\n            AsyncStorage.getItem(\"UserData\").then(value => {\r\n                if(value != null){\r\n                    navigation.navigate('login');\r\n                    //Alert.alert(\"Logged in Successfully!\");\r\n                }\r\n            })\r\n        }catch(error){\r\n            console.warn(error);\r\n        }\r\n    }\r\n\r\n    const setData = async (data) => {\r\n        if(username.length == 0 || password.length == 0){\r\n            //navigation.navigate('login');\r\n            Alert.alert(\"Warning!\", \"Please write your data\");\r\n            \r\n        }else{\r\n            try{\r\n                var user = {\r\n                    Username: username,\r\n                    Password: password,\r\n                };\r\n                await AsyncStorage.setItem(\"UserData\", JSON.stringify(user));\r\n                Alert.alert(\"Account Created Successfully\",\r\n                []\r\n                \r\n                );  \r\n            }catch(error){\r\n                console.warn(error);\r\n            }\r\n        }\r\n    }\r\n\r\n    // const doUserRegistration = async function () {\r\n    //     // Note that these values come from state variables that we've declared before\r\n    //     const usernameValue = username;\r\n    //     const passwordValue = password;\r\n    //     // Since the signUp method returns a Promise, we need to call it using await\r\n    //     return await Parse.User.signUp(usernameValue, passwordValue)\r\n    //       .then((createdUser) => {\r\n    //         // Parse.User.signUp returns the already created ParseUser object if successful\r\n    //         Alert.alert(\r\n    //           \"Success!\",\r\n    //           `User ${createdUser.get(\"username\")} was successfully created!`\r\n    //         );\r\n    //         return true;\r\n    //       })\r\n    //       .catch((error) => {\r\n    //         // signUp can fail if any parameter is blank or failed an uniqueness check on the server\r\n    //         Alert.alert(\"Error!\", error.message);\r\n    //         return false;\r\n    //       });\r\n    //   };\r\n\r\n\r\n\r\n    return ( \r\n        <ImageBackground source={{uri: 'https://img.freepik.com/free-vector/halftone-background-with-circles_23-2148907689.jpg?w=900&t=st=1663801401~exp=1663802001~hmac=ab514b0b1a1fdde6106cdc6443692a75d6fb569104a701587eedd499e5237bd7'}} style={styles.backgroundImage}>\r\n        <View style = { styles.container } > \r\n        <Text style={styles.title}> Register Today! </Text>\r\n        <Text></Text>\r\n\r\n        <Text style={styles.subheader}>Enter Name:</Text>\r\n        <TextInput \r\n        placeholder='e.g. John Doe' \r\n        style={styles.input}\r\n        onChangeText={(value) => setName(value)} />\r\n\r\n        <Text style={styles.subheader}>Enter Age:</Text>\r\n        <TextInput \r\n        keyboardType='numeric'\r\n        placeholder='e.g. 25' \r\n        style={styles.input}\r\n        onChangeText={(value) => setAge(value)} />\r\n\r\n        <Text style={styles.subheader}>Enter Email:</Text>\r\n        <TextInput \r\n        keyboardType='email-address'\r\n        placeholder='e.g. johndoe@yahoo.co.uk' \r\n        style={styles.input}\r\n        onChangeText={(value) => setEmail(value)} />\r\n\r\n        <Text style={styles.subheader}>Enter Username:</Text>\r\n        <TextInput \r\n        keyboardType='username'\r\n        placeholder='e.g. chiderac' \r\n        style={styles.input}\r\n        value={username}\r\n        onChangeText={(value) => setUsername(value)} />\r\n\r\n        <Text style={styles.subheader}>Enter Password:</Text>\r\n        <TextInput \r\n        placeholder='e.g. xxxxxx' \r\n        style={styles.input}\r\n        value={password}\r\n        onChangeText={(value) => setPassword(value)} />\r\n\r\n        <Button title={\"Sign Up\"} onPress={{setData}} />\r\n        <StatusBar style = \"auto\" />\r\n        </View>\r\n        </ImageBackground>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    title: {\r\n        color: 'white',\r\n        fontWeight: 'bold',\r\n        fontSize: 30,\r\n    },\r\n    header: {\r\n        color: \"white\",\r\n        fontWeight: \"bold\",\r\n        fontSize: 20,\r\n    },\r\n    subheader: {\r\n        color: \"white\",\r\n        fontWeight: \"bold\",\r\n        fontSize: 16,\r\n    },\r\n    text: {\r\n        color: \"white\",\r\n        fontWeight: \"bold\",\r\n        fontSize: 14,\r\n    },\r\n    backgroundImage: {\r\n        flex: 1,\r\n        resizeMode: 'cover'\r\n    },\r\n    input: {\r\n        borderWidth: 5,\r\n        backgroundColor:'white',\r\n        borderColor: 'white',\r\n        padding: 8,\r\n        margin: 10,\r\n        width: 200,\r\n      }\r\n\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}